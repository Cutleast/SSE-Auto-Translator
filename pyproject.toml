[project]
name = "sse-auto-translator"
version = "3.0.0-alpha-1"
description = "A tool for translating entire modlists by auto-downloading available translations from Nexus Mods."
license = { file = "LICENSE" }
authors = [{ name = "Cutleast", email = "cutleast@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "beautifulsoup4",
    "cloudscraper",
    "comtypes",
    "deepl",
    "googletrans==3.1.0a0",
    "jstyleson",
    "lingua-language-detector",
    "lz4",
    "plyvel-ci",
    "py7zr",
    "pydantic",
    "pyperclip",
    "pyside6",
    "pytz",
    "pyuac",
    "pywin32",
    "pyzmq",
    "qtawesome<1.4.0",
    "qtpy",
    "rarfile",
    "requests",
    "semantic-version",
    "spylls",
    "sse-bsa",
    "unrar",
    "virtual-glob",
    "websocket-client",
]

[dependency-groups]
dev = [
    "cx-freeze<8.1.0",
    "nuitka",
    "pyinstaller",
    "pyinstaller-versionfile",
    "pyright",
    "pytest",
    "pytest-cov",
    "pytest-qt",
    "ruff",
    "types-requests",
]

[tool.cxfreeze]
executables = [
    { script = "src/main.py", base = "gui", target_name = "SSE-AT.exe", icon = "res/icons/icon.ico", copyright = "Attribution-NonCommercial-NoDerivatives 4.0 International" },
    { script = "src/main.py", base = "console", target_name = "SSE-AT_cli.exe", icon = "res/icons/icon.ico", copyright = "Attribution-NonCommercial-NoDerivatives 4.0 International" },
]

[tool.cxfreeze.build_exe]
replace_paths = [["*", ""]]
packages = ["ctypes"]
includes = ["ctypes.wintypes"]
excludes = ["tkinter", "unittest"]
zip_include_packages = ["encodings", "PySide6", "shiboken6"]
include_path = "src"
include_files = [
    [
        ".venv/Lib/site-packages/plyvel_ci.libs",
        "lib/plyvel",
    ],
    [
        ".venv/Lib/site-packages/cloudscraper/user_agent/browsers.json",
        "cloudscraper/user_agent/browsers.json",
    ],
    [
        "res/7-zip",
        "res/7-zip",
    ],
    [
        "res/app/database",
        "res/app/database",
    ],
    [
        "res/hunspell",
        "res/hunspell",
    ],
    [
        "res/path_limit.reg",
        "res/path_limit.reg",
    ],
    [
        "res/string_records.json",
        "res/string_records.json",
    ],
    [
        "res/TaskbarLib.tlb",
        "res/TaskbarLib.tlb",
    ],
]
build_exe = "dist/SSE-AT"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "[%(asctime)s.%(msecs)03d][%(levelname)s][%(name)s.%(funcName)s]: %(message)s"

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "strict"
exclude = ["**/__pycache__", "**/*.old"]
stubPath = "./stubs"

# Check here for a full list of options: https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-settings-defaults
deprecateTypingAliases = false
reportImplicitOverride = "warning"
reportMatchNotExhaustive = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryCast = "information"
reportUnnecessaryComparison = "information"
reportUnnecessaryContains = "information"
reportUnnecessaryIsInstance = "information"
reportUnnecessaryTypeIgnoreComment = "information"
reportUnusedClass = "warning"
reportUnusedImport = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
